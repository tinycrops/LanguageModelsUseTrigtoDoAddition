---- MODULE MC ----
EXTENDS ClockAlgorithm, TLC

\* Model checking configuration for the Clock Algorithm

\* Constants definitions for model checking
NumberBases == {10, 20}
MaxNumber == 19  \* Testing numbers 0-19 to keep model checking feasible
Periods == {2, 5, 10, 100}  \* Periods from the original paper (base 10)
Base20Periods == {2, 4, 5, 20, 400}  \* Modified periods for base 20
PrecisionDigits == 6  \* Precision for floating point calculations

\* Model checking parameters
CONSTANTS
    MaxA <- MaxNumber,
    MaxB <- MaxNumber

\* Properties to check
PROPERTIES
    TypeInvariant
    TrigIdentitiesCorrect
    Base10Works
    Base20Works

\* Invariants to verify
INVARIANTS
    LAMBDA state: AccuracyForBase(10) >= 0
    LAMBDA state: AccuracyForBase(20) >= 0

\* For evaluation in Interactive TLC
\* These operators can be evaluated to see detailed experiment results
AvgBase10Accuracy == AccuracyForBase(10)
AvgBase20Accuracy == AccuracyForBase(20)

\* Helper to view specific experiment results
GetExperimentResults(a, b, whichBase) ==
    SelectSeq(experimentData, LAMBDA e: e.base = whichBase /\ e.a = a /\ e.b = b)

\* Property to check that the trigonometric identities correctly implement addition
VerifyAdditionImplementation ==
    LET
        a == 7  \* Example number
        b == 12  \* Example number
        base10Result == (a + b) % 100  \* Expected result in base 10
        base20Result == (a + b) % 400  \* Expected result in base 20
        
        \* Create helices for base 10
        base10HelixA == CreateHelix(a, 10, Periods)
        base10HelixB == CreateHelix(b, 10, Periods)
        base10Combined == CombineHelicesUsingClock(base10HelixA, base10HelixB, Periods)
        base10Decoded == DecodeHelix(base10Combined, 10, Periods)
        
        \* Create helices for base 20
        base20HelixA == CreateHelix(a, 20, Base20Periods)
        base20HelixB == CreateHelix(b, 20, Base20Periods)
        base20Combined == CombineHelicesUsingClock(base20HelixA, base20HelixB, Base20Periods)
        base20Decoded == DecodeHelix(base20Combined, 20, Base20Periods)
    IN
        /\ base10Decoded = base10Result
        /\ base20Decoded = base20Result

====
